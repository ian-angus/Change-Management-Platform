"""initial

Revision ID: 6734842d6dbe
Revises: 
Create Date: 2025-05-17 01:58:26.633329

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '6734842d6dbe'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('project_stakeholders')
    op.drop_table('user_auth')
    op.drop_table('password_reset_tokens')
    op.drop_table('key_message_history')
    op.drop_table('group_members')
    op.drop_table('role')
    op.drop_table('assessment_templates')
    op.drop_table('groups')
    op.drop_table('assessment_questions')
    op.drop_table('key_message')
    op.drop_table('project_groups')
    op.drop_table('employees')
    op.drop_table('assessment_stakeholders')
    op.drop_table('assessment')
    op.drop_table('project')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('project',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('start_date', sa.DATETIME(), nullable=True),
    sa.Column('end_date', sa.DATETIME(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), nullable=False),
    sa.Column('project_phase', sa.VARCHAR(length=50), nullable=True),
    sa.Column('creation_date', sa.DATETIME(), nullable=True),
    sa.Column('last_modified_date', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assessment',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('project_id', sa.INTEGER(), nullable=False),
    sa.Column('assessment_type', sa.VARCHAR(length=100), nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), nullable=False),
    sa.Column('creation_date', sa.DATETIME(), nullable=True),
    sa.Column('completion_date', sa.DATETIME(), nullable=True),
    sa.Column('results', sqlite.JSON(), nullable=True),
    sa.Column('risk_level', sa.VARCHAR(length=50), nullable=True),
    sa.Column('readiness_score', sa.INTEGER(), nullable=True),
    sa.Column('deploy_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assessment_stakeholders',
    sa.Column('assessment_id', sa.INTEGER(), nullable=False),
    sa.Column('employee_id', sa.INTEGER(), nullable=False),
    sa.Column('role', sa.VARCHAR(length=100), nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessment.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('assessment_id', 'employee_id')
    )
    op.create_table('employees',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), nullable=False),
    sa.Column('job_position', sa.VARCHAR(length=100), nullable=False),
    sa.Column('department', sa.VARCHAR(length=100), nullable=True),
    sa.Column('source', sa.VARCHAR(length=50), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('project_groups',
    sa.Column('project_id', sa.INTEGER(), nullable=False),
    sa.Column('group_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'group_id')
    )
    op.create_table('key_message',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), nullable=False),
    sa.Column('supporting_statement', sa.TEXT(), nullable=False),
    sa.Column('tone_purpose', sa.VARCHAR(length=100), nullable=False),
    sa.Column('stage_tag', sa.VARCHAR(length=50), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('version', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('created_by_id', sa.INTEGER(), nullable=False),
    sa.Column('project_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assessment_questions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('template_id', sa.INTEGER(), nullable=False),
    sa.Column('text', sa.TEXT(), nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('options', sqlite.JSON(), nullable=True),
    sa.Column('required', sa.BOOLEAN(), nullable=True),
    sa.Column('helper_text', sa.VARCHAR(length=255), nullable=True),
    sa.Column('placeholder', sa.VARCHAR(length=255), nullable=True),
    sa.Column('default_answer', sa.VARCHAR(length=255), nullable=True),
    sa.Column('order', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['template_id'], ['assessment_templates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('groups',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assessment_templates',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('group_members',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('group_id', sa.INTEGER(), nullable=False),
    sa.Column('employee_id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('key_message_history',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('key_message_id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), nullable=False),
    sa.Column('supporting_statement', sa.TEXT(), nullable=False),
    sa.Column('tone_purpose', sa.VARCHAR(length=100), nullable=False),
    sa.Column('stage_tag', sa.VARCHAR(length=50), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('version', sa.INTEGER(), nullable=False),
    sa.Column('changed_at', sa.DATETIME(), nullable=False),
    sa.Column('changed_by_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['changed_by_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['key_message_id'], ['key_message.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('password_reset_tokens',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('token', sa.VARCHAR(length=100), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('expires_at', sa.DATETIME(), nullable=False),
    sa.Column('used', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_auth.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('user_auth',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=128), nullable=False),
    sa.Column('employee_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('project_stakeholders',
    sa.Column('project_id', sa.INTEGER(), nullable=False),
    sa.Column('employee_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'employee_id')
    )
    # ### end Alembic commands ###
